# Copyright 2020, 2024, Oracle Corporation and/or its affiliates.  All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at
# http://oss.oracle.com/licenses/upl.

# ---------------------------------------------------------------------------
# Coherence Operator GitHub Actions Minikube K8s Certification build.
# ---------------------------------------------------------------------------
name: Minikube K8s Certification

on:
  workflow_dispatch:
  push:
    branches-ignore:
    - gh-pages
    - 1.0.0
    - 2.x
    - 3.x
  pull_request:
    types:
      - opened
      - synchronize
      - committed
    branches-ignore:
    - gh-pages
    - 1.0.0
    - 2.x
    - 3.x

env:
  MAVEN_USER: ${{ secrets.MAVEN_USER }}
  MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
  LOAD_KIND: false
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SKIP_SPRING_CNBP: true

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        matrixName:
          - v1.34
          - v1.33
          - v1.32
          - v1.31
        include:
          - matrixName: v1.34
            k8s: v1.34.0
          - matrixName: v1.33
            k8s: v1.33.1
          - matrixName: v1.32
            k8s: v1.32.5
          - matrixName: v1.31
            k8s: v1.31.9

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

#   This step will free up disc space on the runner by removing
#   lots of things that we do not need.
    - name: disc
      shell: bash
      run: |
        echo "Listing 100 largest packages"
        dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 100
        df -h
        echo "Removing large packages"
        sudo docker image prune --all --force
        sudo docker builder prune -a
        sudo apt-get remove -y '^aspnetcore-.*' || true
        sudo apt-get remove -y '^dotnet-.*' || true
        sudo apt-get remove -y '^llvm-.*' || true
        sudo apt-get remove -y '^temurin-.*' || true
        sudo apt-get remove -y 'monodoc-http' || true
        sudo apt-get remove -y 'php.*' || true
        sudo apt-get remove -y 'ruby.*' || true
        sudo apt-get remove -y mercurial-common || true
        sudo apt-get remove -y azure-cli || true
        sudo apt-get remove -y google-cloud-cli-anthoscli || true
        sudo apt-get remove -y google-cloud-sdk || true
        sudo apt-get remove -y hhvm || true
        sudo apt-get remove -y google-chrome-stable || true
        sudo apt-get remove -y firefox || true
        sudo apt-get remove -y microsoft-edge-stable || true
        sudo apt-get remove -y powershell || true
        sudo apt-get remove -y mono-devel || true
        sudo apt-get autoremove -y || true
        sudo apt-get clean
        df -h
        echo "Removing large directories"
        rm -rf /usr/share/dotnet/
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        df -h

    - name: Set up JDK
      uses: oracle-actions/setup-java@v1
      with:
        website: oracle.com
        release: 21

    - name: Cache Go Modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-mods-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-mods-

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Edit DNS Resolve
      shell: bash
      run: |
        sudo chown -R runner:runner /run/systemd/resolve/stub-resolv.conf
        sudo echo nameserver 8.8.8.8 > /run/systemd/resolve/stub-resolv.conf

    - name: Certification Tests
      shell: bash
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
        export SHELL=/bin/bash
        export MINIKUBE_K8S=${{ matrix.k8s }}
        make minikube
        eval $(minikube -p minikube docker-env)
        minikube version
        minikube status
        kubectl version
        kubectl get nodes
        docker pull gcr.io/distroless/java
        docker pull gcr.io/distroless/java17-debian12
        docker pull gcr.io/distroless/java21-debian12
        make build-operator
        make build-basic-test-image
        make build-compatibility-image
        make helm-chart
        make certification-test

    - uses: actions/upload-artifact@v4
      if: ${{ failure() || cancelled() }}
      with:
        name: test-output-${{ matrix.matrixName }}
        path: build/_output/test-logs
        if-no-files-found: ignore
