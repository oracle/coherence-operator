# Copyright 2021 Oracle Corporation and/or its affiliates.  All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at
# http://oss.oracle.com/licenses/upl.

# ---------------------------------------------------------------------------
# Coherence Operator GitHub Actions Coherence Certification build.
# ---------------------------------------------------------------------------
name: Coherence Certification

on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches-ignore:
    - gh-pages
  pull_request:
    types:
      - opened
      - committed
    branches-ignore:
    - gh-pages
    - 1.0.0
    - 2.x

env:
  MAVEN_USER: ${{ secrets.MAVEN_USER }}
  MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
  RELEASE_IMAGE_PREFIX: "localhost:5000/"
  LOAD_KIND: true

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        coherenceVersion:
          - "21.06-M2"
          - "20.12.2"
          - "14.1.2-0-0-SNAPSHOT"
          - "14.1.1-0-6-SNAPSHOT"
          - "14.1.1-0-5"
          - "14.1.1.0.0"
          - "12.2.1.4.0"
          - "12.2.1-4-9-SNAPSHOT"
          - "12.2.1-3-15-SNAPSHOT"
        include:
          - coherenceVersion: "21.06-M2"
            coherence-image: "ghcr.io/oracle/coherence-ce:21.06-M2"
          - coherenceVersion: "20.12.2"
            coherence-image: "ghcr.io/oracle/coherence-ce:20.12.2"
          - coherenceVersion: "14.1.2-0-0-SNAPSHOT"
            coherence-image: "iad.ocir.io/odx-stateservice/test/coherence:14.1.2-0-0-SNAPSHOT"
          - coherenceVersion: "14.1.1-0-6-SNAPSHOT"
            coherence-image: "iad.ocir.io/odx-stateservice/test/coherence:14.1.1-0-6-SNAPSHOT"
          - coherenceVersion: "14.1.1-0-5"
            coherence-image: "ghcr.io/oracle/coherence-ce:14.1.1-0-5"
          - coherenceVersion: "14.1.1.0.0"
            coherence-image: "container-registry.oracle.com/middleware/coherence:14.1.1.0.0"
          - coherenceVersion: "12.2.1.4.0"
            coherence-image: "container-registry.oracle.com/middleware/coherence:12.2.1.4.0"
          - coherenceVersion: "12.2.1-4-9-SNAPSHOT"
            coherence-image: "iad.ocir.io/odx-stateservice/test/coherence:12.2.1-4-10-SNAPSHOT"
          - coherenceVersion: "12.2.1-3-15-SNAPSHOT"
            coherence-image: "iad.ocir.io/odx-stateservice/test/coherence:12.2.1-3-15-SNAPSHOT"

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

#   This step will free up disc space on the runner by removing
#   lots of things that we do not need.
    - name: disc
      shell: bash
      run: |
        echo "Listing 100 largest packages"
        dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 100
        df -h
        echo "Removing large packages"
        sudo apt-get remove -y '^ghc-8.*'
        sudo apt-get remove -y '^dotnet-.*'
        sudo apt-get remove -y '^llvm-.*'
        sudo apt-get remove -y 'monodoc-http'
        sudo apt-get remove -y 'php.*'
        sudo apt-get remove -y azure-cli google-cloud-sdk hhvm google-chrome-stable firefox powershell mono-devel
        sudo apt-get autoremove -y
        sudo apt-get clean
        df -h
        echo "Removing large directories"
        rm -rf /usr/share/dotnet/
        df -h

    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: '1.8'

    - name: Cache Go Modules
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-mods-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-mods-

    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15.x

    - name: Start KinD Cluster
      shell: bash
      run: |
        sh ./hack/kind.sh
        kubectl version
        kubectl get nodes
        docker login container-registry.oracle.com -u "${{ secrets.OCR_DOCKER_USERNAME }}" -p "${{ secrets.OCR_DOCKER_PASSWORD }}"
        docker login "${{ secrets.OCI_REGISTRY }}" -u "${{ secrets.OCI_USERNAME }}" -p "${{ secrets.OCI_PASSWORD }}"
        docker pull gcr.io/distroless/java
        docker pull gcr.io/distroless/java:11
        docker pull ${{ matrix.coherence-image }}

    - name: Coherence Certification Tests
      shell: bash
      run: |
        export COHERENCE_IMAGE=${{ matrix.coherence-image }}
        echo "COHERENCE_IMAGE=${COHERENCE_IMAGE}"
        make clean
        echo "Building Operator Image"
        make build-operator-images
        echo "Building Coherence Compatibility Image"
        make build-compatibility-image
        echo "Pushing Images"
        make push-release-images
        make push-compatibility-image
        echo "Loading Images to Kind"
        make kind-load
        make kind-load-compatibility
        echo "Running Coherence Compatibility Tests"
        make coherence-compatibility-test

    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: test-output
        path: build/_output/test-logs
