# Copyright 2020, 2024, Oracle Corporation and/or its affiliates.  All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at
# http://oss.oracle.com/licenses/upl.

# ---------------------------------------------------------------------------
# Coherence Operator GitHub Actions K8s Certification build.
# ---------------------------------------------------------------------------
name: K8s Certification

on:
  workflow_dispatch:
  push:
    branches-ignore:
    - gh-pages
    - 1.0.0
    - 2.x
    - 3.x
  pull_request:
    types:
      - opened
      - synchronize
      - committed
    branches-ignore:
    - gh-pages
    - 1.0.0
    - 2.x
    - 3.x

env:
  MAVEN_USER: ${{ secrets.MAVEN_USER }}
  MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
  LOAD_KIND: true
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        matrixName:
          - v1.29
          - v1.28
          - v1.27
          - v1.26
          - v1.25
          - v1.24
          - v1.23
        include:
          - matrixName: v1.29
            k8s: kindest/node:v1.29.2@sha256:51a1434a5397193442f0be2a297b488b6c919ce8a3931be0ce822606ea5ca245
            kindCommand: kind-calico
            runNetTests: true
          - matrixName: v1.28
            k8s: kindest/node:v1.28.7@sha256:9bc6c451a289cf96ad0bbaf33d416901de6fd632415b076ab05f5fa7e4f65c58
            kindCommand: kind-calico
            runNetTests: true
          - matrixName: v1.27
            k8s: kindest/node:v1.27.11@sha256:681253009e68069b8e01aad36a1e0fa8cf18bb0ab3e5c4069b2e65cafdd70843
            kindCommand: kind-calico
            runNetTests: true
          - matrixName: v1.26
            k8s: kindest/node:v1.26.14@sha256:5d548739ddef37b9318c70cb977f57bf3e5015e4552be4e27e57280a8cbb8e4f
            kindCommand: kind-calico
            runNetTests: true
          - matrixName: v1.25
            k8s: kindest/node:v1.25.16@sha256:e8b50f8e06b44bb65a93678a65a26248fae585b3d3c2a669e5ca6c90c69dc519
            kindCommand: kind-calico
            runNetTests: true
          - matrixName: v1.24
            k8s: kindest/node:v1.24.17@sha256:bad10f9b98d54586cba05a7eaa1b61c6b90bfc4ee174fdc43a7b75ca75c95e51
            kindCommand: kind-calico
            runNetTests: true
          - matrixName: v1.23
            k8s: kindest/node:v1.23.17@sha256:14d0a9a892b943866d7e6be119a06871291c517d279aedb816a4b4bc0ec0a5b3
            kindCommand: kind-calico
            runNetTests: true

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

#   This step will free up disc space on the runner by removing
#   lots of things that we do not need.
    - name: disc
      shell: bash
      run: |
        echo "Listing 100 largest packages"
        dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 100
        df -h
        echo "Removing large packages"
        sudo apt-get remove -y '^dotnet-.*' || true
        sudo apt-get remove -y '^llvm-.*' || true
        sudo apt-get remove -y 'monodoc-http' || true
        sudo apt-get remove -y 'php.*' || true
        sudo apt-get remove -y azure-cli google-cloud-sdk hhvm google-chrome-stable firefox powershell mono-devel || true
        sudo apt-get autoremove -y || true
        sudo apt-get clean
        df -h
        echo "Removing large directories"
        rm -rf /usr/share/dotnet/
        sudo rm -rf /usr/local/lib/android
        df -h

    - name: Set up JDK
      uses: oracle-actions/setup-java@v1
      with:
        website: oracle.com
        release: 21

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.22.x

    - name: Cache Go Modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-mods-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-mods-

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Cache Tools
      uses: actions/cache@v3
      with:
        path: build/tools
        key: ${{ runner.os }}-build-tools-${{ hashFiles('**/Makefile') }}
        restore-keys: ${{ runner.os }}-build-tools

    - name: Edit DNS Resolve
      shell: bash
      run: |
        sudo chown -R runner:runner /run/systemd/resolve/stub-resolv.conf
        sudo echo nameserver 8.8.8.8 > /run/systemd/resolve/stub-resolv.conf

    - name: Start KinD Cluster
      shell: bash
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
        make ${{ matrix.kindCommand }} KIND_IMAGE=${{ matrix.k8s }} CALICO_TIMEOUT=600s
        kubectl version
        kubectl get nodes
        docker pull gcr.io/distroless/java
        docker pull gcr.io/distroless/java11-debian11
        docker pull gcr.io/distroless/java17-debian11

    - name: Certification Tests
      shell: bash
      run: |
        export RUN_NET_TEST=${{ matrix.runNetTests }}
        ./hack/k8s-certification.sh

    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: test-output-${{ matrix.matrixName }}
        path: build/_output/test-logs
