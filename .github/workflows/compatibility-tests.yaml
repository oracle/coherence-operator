# Copyright 2019, 2022, Oracle Corporation and/or its affiliates.  All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at
# http://oss.oracle.com/licenses/upl.

# ---------------------------------------------------------------------------
# Coherence Operator GitHub Actions Backwards Compatibility Tests.
# ---------------------------------------------------------------------------
name: Backwards Compatibility Tests

on:
  workflow_dispatch:
  push:
    branches-ignore:
    - gh-pages
    - 1.0.0
    - 2.x
  pull_request:
    types:
      - opened
      - synchronize
      - committed
    branches-ignore:
    - gh-pages
    - 1.0.0
    - 2.x

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        compatibilityVersion:
        - 3.2.4
        - 3.2.3
        - 3.2.2
        - 3.2.1
        - 3.1.5
        - 3.1.4
        - 3.0.2
        include:
        - compatibilityVersion: 3.2.4
          compatibilitySelector: control-plane=coherence
        - compatibilityVersion: 3.2.3
          compatibilitySelector: control-plane=coherence
        - compatibilityVersion: 3.2.2
          compatibilitySelector: control-plane=coherence
        - compatibilityVersion: 3.2.1
          compatibilitySelector: control-plane=coherence
        - compatibilityVersion: 3.1.5
          compatibilitySelector: control-plane=coherence
        - compatibilityVersion: 3.1.4
          compatibilitySelector: control-plane=coherence
        - compatibilityVersion: 3.0.2
          compatibilitySelector: component=coherence-operator

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    #   This step will free up disc space on the runner by removing
    #   lots of things that we do not need.
    - name: disc
      shell: bash
      run: |
        echo "Listing 100 largest packages"
        dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 100
        df -h
        echo "Removing large packages"
        sudo apt-get remove -y '^dotnet-.*'
        sudo apt-get remove -y '^llvm-.*'
        sudo apt-get remove -y 'monodoc-http'
        sudo apt-get remove -y 'php.*'
        sudo apt-get remove -y azure-cli google-cloud-sdk hhvm google-chrome-stable firefox powershell mono-devel
        sudo apt-get autoremove -y
        sudo apt-get clean
        df -h
        echo "Removing large directories"
        rm -rf /usr/share/dotnet/
        df -h

    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: '1.8'

    - name: Cache Go Modules
      uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-mods-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-mods-

    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x

    - name: Edit DNS Resolve
      shell: bash
      run: |
        sudo chown -R runner:runner /run/systemd/resolve/stub-resolv.conf
        sudo echo nameserver 8.8.8.8 > /run/systemd/resolve/stub-resolv.conf

    - name: Start KinD Cluster
#     Start a KinD K8s cluster with single worker node
      shell: bash
      run: |
        make kind
        kubectl version
        kubectl get nodes
        docker pull gcr.io/distroless/java
        docker pull gcr.io/distroless/java11
        docker pull gcr.io/distroless/java17

    - name: Build
      shell: bash
      run: make all

    - name: Load Images to KinD
#     Load the images just built to the KinD cluster
      shell: bash
      run: |
        make kind-load

    - name: Compatibility Tests
      shell: bash
      run: |
        make compatibility-test COMPATIBLE_VERSION=${{ matrix.compatibilityVersion }} COMPATIBLE_SELECTOR=${{ matrix.compatibilitySelector }}

    - uses: actions/upload-artifact@v1
#      if: failure()
      with:
        name: test-output
        path: build/_output/test-logs
