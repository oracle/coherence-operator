<?xml version="1.0" encoding="UTF-8"?>

<!--

    Copyright (c) 2019, 2021, Oracle and/or its affiliates.
    Licensed under the Universal Permissive License v 1.0 as shown at
    http://oss.oracle.com/licenses/upl.

-->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.oracle.coherence.kubernetes</groupId>
  <artifactId>operator-parent</artifactId>
  <packaging>pom</packaging>
  <version>3.1.2</version>

  <description>Oracle Coherence Kubernetes Operator Project</description>
  <name>coherence-operator parent</name>

  <modules>
    <module>coherence-utils</module>
    <module>operator-test</module>
    <module>operator-test-spring</module>
  </modules>

  <properties>
    <operator.version>${project.version}</operator.version>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>8</maven.compiler.source>
    <maven.compiler.target>8</maven.compiler.target>

    <!--  The Coherence jar version (compile time dependency) -->
    <coherence.version>20.12</coherence.version>
    <!-- The version of Coherence to use in the test images -->
    <coherence.test.version>${coherence.version}</coherence.test.version>

    <!-- library dependency versions -->
    <version.lib.asciidoctor.diagram>2.0.2</version.lib.asciidoctor.diagram>
    <version.lib.bedrock>5.0.16</version.lib.bedrock>
    <version.lib.checkstyle>8.18</version.lib.checkstyle>
    <version.lib.commonjava.directory>0.3.1</version.lib.commonjava.directory>
    <version.lib.glassfish.jmxmp>1.0-b01-ea</version.lib.glassfish.jmxmp>
    <version.lib.glassfish.copyright>2.1</version.lib.glassfish.copyright>
    <version.lib.hamcrest>1.3</version.lib.hamcrest>
    <version.lib.helidon>1.2.0</version.lib.helidon>
    <version.lib.junit>4.13.1</version.lib.junit>
    <version.lib.mockito>2.18.3</version.lib.mockito>
    <version.lib.spring>2.3.3.RELEASE</version.lib.spring>

    <version.plugin.checkstyle>2.17</version.plugin.checkstyle>
    <version.plugin.exec>3.0.0</version.plugin.exec>
    <version.plugin.helidon-build-tools>2.0.0-M3</version.plugin.helidon-build-tools>
    <version.plugin.jib>2.5.2</version.plugin.jib>
    <version.plugin.maven.assembly>3.1.1</version.plugin.maven.assembly>
    <version.plugin.maven.compiler>3.7.0</version.plugin.maven.compiler>
    <version.plugin.maven.dependency>3.1.1</version.plugin.maven.dependency>
    <version.plugin.maven.deploy>2.8.2</version.plugin.maven.deploy>
    <version.plugin.maven.failsafe>2.21.0</version.plugin.maven.failsafe>
    <version.plugin.maven.resource>3.1.0</version.plugin.maven.resource>
    <version.plugin.maven.surefire>2.21.0</version.plugin.maven.surefire>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.oracle.coherence.ce</groupId>
        <artifactId>coherence</artifactId>
        <version>${coherence.version}</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.coherence.ce</groupId>
        <artifactId>coherence-management</artifactId>
        <version>${coherence.version}</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.coherence.ce</groupId>
        <artifactId>coherence-metrics</artifactId>
        <version>${coherence.version}</version>
      </dependency>

      <dependency>
        <groupId>org.glassfish.external</groupId>
        <artifactId>opendmk_jmxremote_optional_jar</artifactId>
        <version>${version.lib.glassfish.jmxmp}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot</artifactId>
        <version>${version.lib.spring}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
        <version>${version.lib.spring}</version>
      </dependency>

      <!-- test dependencies -->

      <dependency>
        <groupId>com.oracle.bedrock</groupId>
        <artifactId>bedrock-runtime</artifactId>
        <version>${version.lib.bedrock}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.oracle.bedrock.coherence</groupId>
        <artifactId>coherence-12.2.1-testing-support</artifactId>
        <version>${version.lib.bedrock}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${version.lib.junit}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-all</artifactId>
        <version>${version.lib.hamcrest}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${version.lib.mockito}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${version.plugin.maven.compiler}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${version.plugin.maven.assembly}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${version.plugin.maven.failsafe}</version>
        </plugin>

        <plugin>
          <groupId>com.google.cloud.tools</groupId>
          <artifactId>jib-maven-plugin</artifactId>
          <version>${version.plugin.jib}</version>
          <configuration>
            <from>
              <image>docker://gcr.io/distroless/java</image>
            </from>
            <container>
              <format>OCI</format>
            </container>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${version.plugin.maven.surefire}</version>
          <executions>
            <execution>
              <goals>
                <goal>test</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.commonjava.maven.plugins</groupId>
          <artifactId>directory-maven-plugin</artifactId>
          <version>${version.lib.commonjava.directory}</version>
        </plugin>

        <plugin>
          <groupId>org.glassfish.copyright</groupId>
          <artifactId>glassfish-copyright-maven-plugin</artifactId>
          <version>${version.lib.glassfish.copyright}</version>
        </plugin>

        <plugin>
          <groupId>io.helidon.build-tools</groupId>
          <artifactId>sitegen-maven-plugin</artifactId>
          <version>${version.plugin.helidon-build-tools}</version>
          <configuration>
            <siteConfigFile>${top.parent.basedir}/../docs/sitegen.yaml</siteConfigFile>
            <siteSourceDirectory>${top.parent.basedir}/../docs</siteSourceDirectory>
            <siteOutputDirectory>${top.parent.basedir}/../build/_output/docs</siteOutputDirectory>
            <siteArchiveExcludes>
              <siteArchiveExclude>.asciidoctor/**</siteArchiveExclude>
            </siteArchiveExcludes>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.asciidoctor</groupId>
              <artifactId>asciidoctorj-diagram</artifactId>
              <version>${version.lib.asciidoctor.diagram}</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${version.lib.spring}</version>
        </plugin>

        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <version>${version.plugin.checkstyle}</version>
            <configuration>
                <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
            </configuration>
            <dependencies>
                <dependency>
                    <groupId>com.puppycrawl.tools</groupId>
                    <artifactId>checkstyle</artifactId>
                    <version>${version.lib.checkstyle}</version>
                    <exclusions>
                        <exclusion>
                            <groupId>com.sun</groupId>
                            <artifactId>tools</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
            </dependencies>
        </plugin>
      </plugins>
    </pluginManagement>
    
    <plugins>
      <plugin>
        <groupId>org.commonjava.maven.plugins</groupId>
        <artifactId>directory-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-top-parent-basedir</id>
            <goals>
              <goal>highest-basedir</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <property>top.parent.basedir</property>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
       </plugin>

      <plugin>
          <groupId>io.helidon.build-tools</groupId>
          <artifactId>sitegen-maven-plugin</artifactId>
          <extensions>true</extensions>
      </plugin>

      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <configuration>
              <configLocation>/hack/checkstyle.xml</configLocation>
              <suppressionsLocation>/hack/checkstyle-suppressions.xml</suppressionsLocation>
          </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>docs</id>
      <modules>
        <module>docs</module>
      </modules>
    </profile>
    <profile>
        <id>checkstyle</id>
        <build>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>run-checkstyle</id>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <phase>validate</phase>
                            <configuration>
                                <configLocation>${top.parent.basedir}/../hack/checkstyle.xml</configLocation>
                                <suppressionsLocation>${top.parent.basedir}/../hack/checkstyle-suppressions.xml</suppressionsLocation>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </build>
    </profile>
  </profiles>
</project>
