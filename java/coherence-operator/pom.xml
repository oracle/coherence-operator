<?xml version="1.0"?>

<!--

    Copyright (c) 2019, 2022, Oracle and/or its affiliates.
    Licensed under the Universal Permissive License v 1.0 as shown at
    http://oss.oracle.com/licenses/upl.

-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.oracle.coherence.kubernetes</groupId>
        <artifactId>operator-parent</artifactId>
        <version>${revision}</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>coherence-operator</artifactId>
    <name>coherence-operator</name>

    <properties>
        <docker.registry>ghcr.io/oracle</docker.registry>
        <image.name>${docker.registry}/coherence-operator-test-base:${project.version}</image.name>
        <image.arch>amd64</image.arch>
        <base.image.name.amd>gcr.io/distroless/java11</base.image.name.amd>
        <base.image.name.arm>gcr.io/distroless/java11</base.image.name.arm>
    </properties>

    <dependencies>
        <!-- module dependencies -->
        <dependency>
            <groupId>com.oracle.coherence.ce</groupId>
            <artifactId>coherence</artifactId>
            <version>${coherence.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish.external</groupId>
            <artifactId>opendmk_jmxremote_optional_jar</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot</artifactId>
            <scope>provided</scope>
        </dependency>

        <!--test dependencies -->
        <dependency>
            <groupId>com.oracle.bedrock</groupId>
            <artifactId>bedrock-runtime</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.oracle.bedrock.coherence</groupId>
            <artifactId>coherence-14.1.1-testing-support</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <!-- Use the assembly plugin to pull together the files to use to build the
             docker image under the target/docker folder -->
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>docker</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <finalName>docker</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptors>
                                <descriptor>src/assembly/image-assembly.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>false</skip>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <systemProperties>
                                <test.certs.location>${test.certs.location}</test.certs.location>
                            </systemProperties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${version.plugin.build.helper}</version>
                <executions>
                    <execution>
                        <id>add_sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/main/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${version.plugin.javadoc}</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <doclint>none</doclint>
                    <tags>
                        <tag>
                            <name>http.response.details</name>
                            <placement>a</placement>
                            <head>Http Response Details:</head>
                        </tag>
                    </tags>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <configuration>
                            <skip>false</skip>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <configuration>
                            <skipNexusStagingDeployMojo>false</skipNexusStagingDeployMojo>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>test-base-image</id>
            <build>
                <plugins>
                    <!--
                    The exec plugin runs Buildah in a container which will build the images
                    by running the build-images.sh shell script.
                    -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>${version.plugin.maven.exec}</version>
                        <executions>
                            <execution>
                                <id>build-images</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>package</phase>
                                <configuration>
                                    <executable>sh</executable>
                                    <arguments>
                                        <argument>${project.basedir}/run-buildah.sh</argument>
                                        <argument>BUILD</argument>
                                    </arguments>
                                    <environmentVariables>
                                        <VERSION>${project.version}</VERSION>
                                        <IMAGE_NAME>${image.name}</IMAGE_NAME>
                                        <IMAGE_ARCH>${image.arch}</IMAGE_ARCH>
                                        <AMD_BASE_IMAGE>${base.image.name.amd}</AMD_BASE_IMAGE>
                                        <ARM_BASE_IMAGE>${base.image.name.arm}</ARM_BASE_IMAGE>
                                        <DOCKER_REGISTRY>${env.DOCKER_REGISTRY}</DOCKER_REGISTRY>
                                        <DOCKER_USERNAME>${env.DOCKER_USERNAME}</DOCKER_USERNAME>
                                        <DOCKER_PASSWORD>${env.DOCKER_PASSWORD}</DOCKER_PASSWORD>
                                        <DOCKER_HUB_USERNAME>${env.DOCKER_HUB_USERNAME}</DOCKER_HUB_USERNAME>
                                        <DOCKER_HUB_PASSWORD>${env.DOCKER_HUB_PASSWORD}</DOCKER_HUB_PASSWORD>
                                        <PROJECT_URL>${project.url}</PROJECT_URL>
                                        <PROJECT_VENDOR>${project.organization.name}</PROJECT_VENDOR>
                                        <PROJECT_DESCRIPTION>${project.description}</PROJECT_DESCRIPTION>
                                    </environmentVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>push-test-base-image</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>push-image</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <phase>install</phase>
                                <configuration>
                                    <executable>sh</executable>
                                    <arguments>
                                        <argument>${project.basedir}/run-buildah.sh</argument>
                                        <argument>PUSH</argument>
                                    </arguments>
                                    <environmentVariables>
                                        <VERSION>${project.version}</VERSION>
                                        <IMAGE_NAME>${image.name}</IMAGE_NAME>
                                        <DOCKER_REGISTRY>${env.DOCKER_REGISTRY}</DOCKER_REGISTRY>
                                        <DOCKER_USERNAME>${env.DOCKER_USERNAME}</DOCKER_USERNAME>
                                        <DOCKER_PASSWORD>${env.DOCKER_PASSWORD}</DOCKER_PASSWORD>
                                    </environmentVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- This profile is enabled if this build is running on amd64 hardware -->
        <profile>
            <id>arch-amd64</id>
            <activation>
                <property>
                    <name>os.arch</name>
                    <value>x86_64</value>
                </property>
            </activation>
            <properties>
                <docker.image.arch>amd64</docker.image.arch>
            </properties>
        </profile>

        <!-- This profile is enabled if this build is running on ARM 64 hardware -->
        <profile>
            <id>arch-arm64</id>
            <activation>
                <property>
                    <name>os.arch</name>
                    <value>aarch64</value>
                </property>
            </activation>
            <properties>
                <docker.image.arch>arm64</docker.image.arch>
            </properties>
        </profile>
    </profiles>
</project>
