# Copyright 2019, Oracle Corporation and/or its affiliates.  All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at
# http://oss.oracle.com/licenses/upl.

apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "coherence-operator.fullname" . }}
  labels:
{{- include "coherence-operator.release_labels" . | indent 4 }}
    component: "coherence-operator"
spec:
  replicas: 1
  selector:
    matchLabels:
      coherenceOperatorCluster: {{ template "coherence-operator.fullname" . }}
      component: "coherence-operator"
  template:
    metadata:
      labels:
        coherenceOperatorCluster: {{ template "coherence-operator.fullname" . }}
        app: {{ template "coherence-operator.name" . }}
        release: {{ .Release.Name }}
        component: "coherence-operator"
    spec:
{{- if .Values.serviceAccount}}
  {{- if not ((eq .Values.serviceAccount "default")) }}
      serviceAccountName: {{ .Values.serviceAccount }}
  {{- end }}
{{- end }}
{{- if .Values.imagePullSecrets }}
  {{- $secretsType := typeOf .Values.imagePullSecrets }}
      imagePullSecrets:
  {{- if eq $secretsType "string" }}
      - name: {{ .Values.imagePullSecrets }}
  {{- else }}
    {{- range .Values.imagePullSecrets }}
      - name: {{ . }}
    {{- end }}
  {{- end }}
{{- end }}
# ---------------------------------------------------------------------------
# Node scheduling
# ---------------------------------------------------------------------------
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
{{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
      containers:
# ---------------------------------------------------------------------------
#  Container: coherence-operator
# ---------------------------------------------------------------------------
        - name: {{ .Chart.Name }}
          image: {{ .Values.coherenceOperator.image }}
          imagePullPolicy: {{ .Values.coherenceOperator.imagePullPolicy | default "IfNotPresent" }}
          ports:
            - containerPort: 8000
          env:
            - name: OPERATOR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: TARGET_NAMESPACES
{{- if .Values.targetNamespaces }}
              value: {{ join ", " .Values.targetNamespaces }}
{{- else }}
              value:
{{- end }}
            - name: EXCLUDED_NAMESPACES
              value: docker,kube-public,kube-system
            - name: JAVA_LOGGING_LEVEL
              value: {{ .Values.javaLoggingLevel }}
{{- if .Values.logCaptureEnabled }}
            - name: EFK_INTEGRATION_ENABLED
              value: {{ .Values.logCaptureEnabled | quote }}
  {{- if .Values.elasticsearch }}
    {{- if .Values.elasticsearchEndpoint.host }}
            - name: ES_HOST
              value: {{ .Values.elasticsearchEndpoint.host }}
    {{- end }}
    {{- if .Values.elasticsearchEndpoint.port }}
            - name: ES_PORT
              value: {{ .Values.elasticsearchEndpoint.port | quote }}
    {{- end }}
  {{- end }}
            - name: ENABLE_FILE_LOGGING
              value: "true"
{{- end }}
          volumeMounts:
            - mountPath: /logs
              name: log-dir
              readOnly: false
{{- if .Values.logCaptureEnabled }}
# ---------------------------------------------------------------------------
#  Container: fluentd
# ---------------------------------------------------------------------------
        - name: fluentd
          image: {{ .Values.fluentd.image }}
          imagePullPolicy: {{ .Values.fluentd.imagePullPolicy | default "IfNotPresent" }}
          env:
            - name: OPERATOR_POD_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: FLUENTD_CONF
              value: fluentd-coherence.conf
            - name: FLUENT_ELASTICSEARCH_SED_DISABLE
              value: "true"
            - name: ELASTICSEARCH_SERVICE_HOST
              valueFrom:
                secretKeyRef:
                  name: coherence-monitoring-config
                  key: elasticsearchhost
            - name: ELASTICSEARCH_SERVICE_PORT
              valueFrom:
                secretKeyRef:
                  name: coherence-monitoring-config
                  key: elasticsearchport
          volumeMounts:
            - mountPath: /fluentd/etc/fluentd-coherence.conf
              subPath: fluentd-coherence.conf
              name: fluentd-coherence-conf
            - mountPath: /logs
              name: log-dir
{{- end }}
# ---------------------------------------------------------------------------
#  Volumes mappings
# ---------------------------------------------------------------------------
      volumes:
        - name: log-dir
          emptyDir:
            medium:
{{- if .Values.logCaptureEnabled }}
        - name: fluentd-coherence-conf
          configMap:
            name: {{ template "coherence-operator.fullname" . }}-efk-config
            defaultMode: 420
{{- end }}
