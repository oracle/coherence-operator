# Copyright 2018 Oracle Corporation and/or its affiliates.  All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at
# http://oss.oracle.com/licenses/upl.

# A list of target namespaces the operator manages
# The names must be lowercase. An empty list means "all namespaces."
targetNamespaces: ["default"]

# The name of the service account that the operator will use to
# make requests to the Kubernetes API server.
# The name must be lowercase.
serviceAccount: default

# imagePullSecrets provides support pulling images from private registries, the value references
#   one or more secrets to be used when pulling images. Secrets must be manually created in the
#   target namespace.
#   ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
#
#   For example, adding the pull secret "foo" would be:
#
#   imagePullSecrets:
#   - "foo"
#
#   adding multiple pull secrets "foo" and "bar" would be
#
#   imagePullSecrets:
#   - "foo"
#   - "bar"
#
#   If specifying pull secrets on the command line with --set there are two choices depending on whether
#   there is a single pull secret or multiple pull secrets. A single secret can be specified as a simple string:
#
#   --set imagePullSecrets=foo
#
#   Multiple pull secrets must be specified as a list, which Helm expects to be contained in curly braces:
#
#   --set "imagePullSecrets{foo,bar}"
#
imagePullSecrets: []

# ---------------------------------------------------------------------------
# service groups the values used to configure the internal K8s service
service:
  # name of the service. It must be unique among services.
  # If not set the operator will use the service name "coherence-operator-service".
  name:
  # service.type is the K8s service type (typically ClusterIP or LoadBalancer)
  type: "ClusterIP"
  # service.domain is the external domain name
  domain: "cluster.local"
  # service.loadBalancerIP is the IP address of the load balancer
  loadBalancerIP:
  # annotations is free form yaml that will be added to the service annotations
  annotations:

# Image groups the values used to configure the image used
coherenceOperator:
  # docker image pull the image from
  image: "${operator.image}"
  # imagePullPolicy controls the K8s container spec's pull policy
  # If not set the pull policy is "IfNotPresent".
  imagePullPolicy: "${operator.image.pullPolicy}"

# The level of Java logging that should be enabled in the operator.
# Valid values are: "SEVERE", "WARNING", "INFO", "CONFIG", "FINE", "FINER", and "FINEST".
javaLoggingLevel: INFO

# Controls whether or not log capture via EFK stack is enabled.
logCaptureEnabled: false

# Specifies values for Kibana Dashboard Imports if logCaptureEnabled is true
dashboardImport:
  timeout: 60
  xpackauth:
    enabled: false
    username: myuser
    password: mypass
  dashboards: {}

# Specify the docker image containing Elasticsearch.
# These parameters are ignored if 'logCaptureEnabled' is false
# or elasticsearchEndpoinit is set.
elasticsearch:
  image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.6.0
  # imagePullPolicy controls the K8s container spec's pull policy
  # If not set the pull policy is "IfNotPresent".
  imagePullPolicy:

# Specify the information of an existing Elasticsearch.
# These parameters are ignored if 'logCaptureEnabled' is false.
elasticsearchEndpoint:
  # The Elasticsearch host if there is an existing one.
  # Default: "elasticsearch.${namespace}.svc.cluster.local"
  # where ${namespace} is the value of namespace for this release.
  host:
  # The Elasticsearch port to be accessed by fluentd.
  # Default: 9200
  port:

# Specify the fluentd image
# These parameters are ignored if 'logCaptureEnabled' is false.
fluentd:
  image: fluent/fluentd-kubernetes-daemonset:v1.3.3-debian-elasticsearch-1.3
  # imagePullPolicy controls the K8s container spec's pull policy
  # If not set the pull policy is "IfNotPresent".
  imagePullPolicy:

# Specify the docker image containing Kibana.
# These parameters are ignored if 'logCaptureEnabled' is false
# or elasticsearchEndpoinit is set.
kibana:
  image: docker.elastic.co/kibana/kibana-oss:6.6.0
  # imagePullPolicy controls the K8s container spec's pull policy
  # If not set the pull policy is "IfNotPresent".
  imagePullPolicy:

# Install coherence-service-monitor to enable prometheus scraping of coherence
# services installed in targetNamespaces.
# Disable this setting to enable using prometheus_io annotations in
# prometheusoperator.
# This parameter is ignored if 'prometheusoperator.enabled' is false.
coherenceServiceMonitorEnabled: true

# Subchart stable prometheus-operator
prometheusoperator:

  # prometheus-operator values documentation
  # ref: https://github.com/helm/charts/blob/master/stable/prometheus-operator/README.md

  # Enable prometheus-operator to enable collection of coherence metrics.
  enabled: false

  alertmanager:

    # disable by default until coherence alerts are created
    enabled: false

  grafana:

    # View coherence metrics using provided coherence-operator grafana dashboards.
    enabled: true
    sidecar:
      dashboards:
        enabled: true
        label: grafana_dashboard

#  Example to enable scraping via prometheus_io annotations on coherence-service pods.
#  Be sure to set .Values.coherenceServiceMonitorEnabled to false.

#  prometheus:
#    prometheusSpec:
#
#      # Define prometheus annotations prometheus_io:[scrape,path,port].
#      # Add metrics labels namespace and pod.
#      # Drop unneeded relabels from metric labels.
#      additionalScrapeConfigs:
#      - job_name: 'prometheus-scrape-annotated-coherence-service-pods'
#        kubernetes_sd_configs:
#        - role: pod
#        relabel_configs:
#        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
#          action: keep
#          regex: true
#        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
#          action: replace
#          target_label: __metrics_path__
#          regex: (.+)
#        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
#          action: replace
#          regex: ([^:]+)(?::\d+)?;(\d+)
#          replacement: $1:$2
#          target_label: __address__
#        - source_labels: [__meta_kubernetes_namespace]
#          action: replace
#          target_label: namespace
#        - source_labels: [__meta_kubernetes_pod_name]
#          action: replace
#          target_label: pod
#        metric_relabel_configs:
#        - action: labeldrop
#          regex: '(instance|job)'
